@model IEnumerable<Flex_SGM.Models.Metricos>

@{
    ViewBag.Title = "Continuous Improvment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Continuous Improvement</h2>

<h3>
    @Html.ActionLink("Crear Registro Nuevo", "Create")
</h3>
<div class="x_panel cbg">
    <div class="x_content clearfix">
        <table class="table table-bordered table-striped clearfix" style="width:100%" id="metricos">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.DiaHora)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Usuario)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Usuario_area)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Usuario_responsable)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Descripcion)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Comentarios)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Proyectos)
                    </th>
                    <th>Opciones</th>
                </tr>
            </thead>
            <tbody>
               @foreach (var item in Model.Where(w => w.Usuario_area == "Continuous_Improvment"))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.DiaHora)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Usuario)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Usuario_area)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Usuario_responsable)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Descripcion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Comentarios)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Proyectos)
                        </td>
                        <td>
                           @if (ViewBag.super == true || ViewBag.uarea == "Continuous_Improvment")
                            {
                                @Html.ActionLink("Editar", "Edit", new { id = item.ID })
                            } |
                            @Html.ActionLink("Detalles", "Details", new { id = item.ID }) |
                           @if (ViewBag.super == true || ViewBag.uarea == "Continuous_Improvment")
                            {
                                @Html.ActionLink("Eliminar", "Delete", new { id = item.ID })
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="col-md-12" style="float:left">
    <div class="x_panel cbg">
        <div class="x_title clearfix">
            <h2>Continuous Improvement Chart per Month</h2>
            <ul class="nav navbar-right">
                <li>
                    <a class="collapse-link collapse" data-toggle="collapse"><i class="fa fa-chevron-down"></i></a>
                </li>
            </ul>
        </div>
        <div class="x_content" id="collapseTwo" data-toggle="false" style="display: none">
            <canvas id="line-chart-horizontal" width="800" height="200"></canvas>
        </div>
    </div>
    <div class="x_panel cbg">
        <div class="x_title clearfix">
            <h2>Continuous Improvement Indicators per Person</h2>
            <ul class="nav navbar-right">
                <li>
                    <a class="collapse-link collapse" data-toggle="collapse"><i class="fa fa-chevron-down"></i></a>
                </li>
            </ul>
        </div>
        <div class="x_content" id="collapseOne" data-toggle="false" style="display: none">
            <canvas id="bar-chart-horizontal" width="800" height="800"></canvas>
        </div>
    </div>
</div>


@section Scripts {

    <script>
        function Verify(idx)
        {
            $.post("@Url.Action("Verify","Metricos")",{ id:idx} ,function(data){
                alert(data);
            });
        }
        $(document).ready(function () {

            if (typeof window.stackBottomLeft === 'undefined') {
                window.stackBottomLeft = {
                    'dir1': 'up',
                    'dir2': 'left',
                    'firstpos1': 25,
                    'firstpos2': 25
                };
            }

            $('[data-toggle="tooltip"]').tooltip();
            $("#Normaldrop").chosen();
            $('#metricos').DataTable({
                "dom": 'lBfrtip',
                "lengthMenu": [[5, 15, 50, -1], ["5", "15", "50", "Todos"]],
                "buttons": [
                    {
                        extend: 'copy',
                        orientation: 'landscape',
                        pageSize: 'LETTER',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6]
                        },
                    },
                    {
                        extend: 'csv',
                        title: 'Continuous Improvment Report',
                        orientation: 'landscape',
                        pageSize: 'LETTER',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6]
                        },
                    },
                    {
                        extend: 'print',
                        title: 'Continuous Improvment Report',
                        orientation: 'landscape',
                        pageSize: 'LETTER',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6]
                        },
                    },
                    {
                        extend: 'pdfHtml5',
                        title: 'Continuous Improvment Report',
                        orientation: 'landscape',
                        pageSize: 'LETTER',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6]
                        },
                    },
                    {
                        extend: 'excelHtml5',
                        title: 'Continuous Improvment Report',
                        orientation: 'landscape',
                        pageSize: 'LETTER',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6]
                        },
                    }
                ],
                "order": [[0, "desc"]],
                "scrollX": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla =(",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "ultimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    },
                    "buttons": {
                        "copy": "Copiar",
                        "colvis": "Visibilidad"
                    }
                }
            });
        });

        new Chart(document.getElementById("bar-chart-horizontal"), {
            type: 'horizontalBar',
            data: {
                labels: @Html.Raw(Json.Encode(ViewBag.ChartLabel)),

                datasets: [
                    {
                        label: "Enero",
                        backgroundColor: 'rgba(255, 26, 104, 0.2)',
                        borderColor: "rgba(26,179,148,0.7)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData1)),
                    },
                    {
                        label: "Febrero",
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: "rgba(26,179,148,0.7)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData2)),
                    },
                    {
                        label: "Marzo",
                        backgroundColor: 'rgba(255, 206, 86, 0.2)',
                        borderColor: "rgba(26,179,148,0.7)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData3)),
                    },
                    {
                        label: "Abril",
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: "rgba(26,179,148,0.7)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData4)),
                    },
                    {
                        label: "Mayo",
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: "rgba(26,179,148,0.7)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData5)),
                    },
                    {
                        label: "Junio",
                        backgroundColor: 'rgba(255, 159, 64, 0.2)',
                        borderColor: "rgba(54, 162, 235, 1)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData6)),
                    },
                    {
                        label: "Julio",
                        backgroundColor: 'rgba(255, 26, 104, 0.2)',
                        borderColor: "rgba(26,179,148,0.7)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData7)),
                    },
                    {
                        label: "Agosto",
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: "rgba(26,179,148,0.7)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData8)),
                    },
                    {
                        label: "Septiembre",
                        backgroundColor: 'rgba(255, 206, 86, 0.2)',
                        borderColor: "rgba(26,179,148,0.7)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData9)),
                    },
                    {
                        label: "Octubre",
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: "rgba(26,179,148,0.7)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData10)),
                    },
                    {
                        label: "Noviembre",
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: "rgba(26,179,148,0.7)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData11)),
                    },
                    {
                        label: "Diciembre",
                        backgroundColor: 'rgba(255, 159, 64, 0.2)',
                        borderColor: "rgba(54, 162, 235, 1)",
                        pointBackgroundColor: "rgba(26,179,148,1)",
                        pointBorderColor: "#fff",
                        data: @Html.Raw(Json.Encode(ViewBag.ChartData12)),
                    }
                ]
            },
            options: {
                legend: { display: true },
                title: {
                    display: true,
                    text: 'Highlights & Financial Review'
                }
            }
        });

        var lineChart =
        {
            labels: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
            datasets: [
                {
                    type: 'line',
                    label: 'Continuous Improvement',
                    data: @Html.Raw(Json.Encode(@ViewBag.monthData)),
                    backgroundColor: "#337ab7",
                    borderColor: "#337ab7",
                    borderWidth: 4,
                    fill: false,
                    datalabels: {
                        display: false,
                        enabled: false,
                    },
                },
                {
                    type: 'line',
                    label: 'Goal',
                    data: [80, , , , , , , , , , , 80],
                    spanGaps: true,
                    backgroundColor: "#2ebc2e",
                    borderColor: "#2ebc2e",
                    borderWidth: 6,
                    fill: false,
                    datalabels: {
                        display: false,
                        enabled: false,
                    },
                    borderDash: [5, 7],
                }
            ]
        };

        var ctqx2 = document.getElementById('line-chart-horizontal');
        var myChartqe2 = new Chart(ctqx2, {
            type: 'line',
            data: lineChart,
            options: {
                responsive: true,
                maintainAspectRatio: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            callback: function (tick) {
                                return tick.toString() + '%';
                                beginAtZero: true
                            },
                            min: 0,
                            max: 100,
                        }
                    }]
                },
                legend: {
                    labels: {
                        // This more specific font property overrides the global property
                        fontColor: 'black',
                        defaultFontSize: 25,
                    }
                },
            },
            plugins: [{
                afterDatasetsDraw: function (chart) {
                    var ctx = chart.ctx;
                    chart.data.datasets.forEach(function (dataset, index) {
                        var datasetMeta = chart.getDatasetMeta(index);
                        if (datasetMeta.hidden) return;
                        datasetMeta.data.forEach(function (point, index) {
                            var value = dataset.data[index],
                                x = point.getCenterPoint().x,
                                y = point.getCenterPoint().y,
                                radius = point._model.radius,
                                fontSize = 15,
                                fontFamily = 'Verdana',
                                fontColor = 'black',
                                fontStyle = 'normal';
                            ctx.save();
                            ctx.textBaseline = 'middle';
                            ctx.textAlign = 'center';
                            ctx.font = fontStyle + ' ' + fontSize + 'px' + ' ' + fontFamily;
                            ctx.fillStyle = fontColor;
                            ctx.fillText(value, x, y - radius - fontSize);
                            ctx.restore();
                        });
                    });
                }
            }]
        });

    </script>
}