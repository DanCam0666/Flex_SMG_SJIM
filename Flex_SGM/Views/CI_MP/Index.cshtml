@model IEnumerable<Flex_SGM.Models.Metricos>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Continuous Improvement / Manpower</h2>

<h3>
    @Html.ActionLink("Crear Registro Nuevo", "Create")
</h3>
<div class="x_panel">
    <div class="x_content clearfix">
        <table class="table table-bordered table-striped clearfix" style="width:100%" id="metricos">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.DiaHora)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Usuario)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Usuario_area)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Usuario_puesto)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Usuario_responsable)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Descripcion)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Proyectos)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
               @foreach (var item in Model.Where(w=> w.Usuario_area == "Cont_Imprv_ManP"))
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.DiaHora)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Usuario)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Usuario_area)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Usuario_puesto)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Usuario_responsable)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Descripcion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Proyectos)
                        </td>
                        <td>
                            @Html.ActionLink("Editar", "Edit", new { id = item.ID }) |
                            @Html.ActionLink("Detalles", "Details", new { id = item.ID }) |
                            @Html.ActionLink("Borrar", "Delete", new { id = item.ID })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="col-md-12" style="float:left">
    <div class="x_panel">
        <div class="x_title">
            Coninuous Improvement Indicators
        </div>
        <div class="x_content">
            <canvas id="bar-chart-horizontal" width="800" height="450"></canvas>
        </div>
    </div>
</div>


@section Scripts {

    <script>

        function Verify(idx)
        {
            $.post("@Url.Action("Verify","Metricos")",{ id:idx} ,function(data){
                alert(data);
            });
        }
        $(document).ready(function () {

            if (typeof window.stackBottomLeft === 'undefined') {
                window.stackBottomLeft = {
                    'dir1': 'up',
                    'dir2': 'left',
                    'firstpos1': 25,
                    'firstpos2': 25
                };
            }

            //  var notice2 = PNotify.info({
              //  title: 'Nuevas Funciones',
              //  text: 'Existen nuevas funciones de Control de Usuario... Se continua trabajando en el reporte automatico de fallas!',
              //  stack: window.stackBottomLeft,
              //  addClass: 'nonblock'
            //  });
            $('[data-toggle="tooltip"]').tooltip();
            $("#Normaldrop").chosen();
            $('#metricos').DataTable({
                "dom": 'lBfrtip',
                "lengthMenu": [[5, 15, 50, -1], ["5", "15", "50", "Todos"]],
                "buttons": ['copy', 'csv', 'print', 'pdf', 'excel'],
                "order": [[0, "desc"]],
                "scrollX": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningun dato disponible en esta tabla =(",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "ultimo",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    },
                    "buttons": {
                        "copy": "Copiar",
                        "colvis": "Visibilidad"
                    }
                }
            });
        });

        new Chart(document.getElementById("bar-chart-horizontal"), {
            type: 'horizontalBar',
            data: {
                labels: ["Adriana Velazquez Garcia", "Ana Zaideth Vazquez Robles", "Carlos Manuel Carapia Murillo", "Carlos Horacio Rodriguez Grimaldo",
                    "Cynthia Veronica Alvarez Figueroa", "Donato Salazar Jimenez", "Vicente Olvera Gonzalez", "Hector Salomon Bucio", "Hipolito Gutierrez Salazar",
                "Ismael Galindo Muñoz"],

                datasets: [
                    {
                        label: "Proyectos Creados",
                        backgroundColor: ["#3cba9f", "#3cba9f", "#3cba9f", "#3cba9f", "#3cba9f", "#3cba9f", "#3cba9f", "#3cba9f", "#3cba9f", "#3cba9f"],
                        data: [7, 10, 0, 5, 6, 8, 4, 7, 5, 6]
                    }
                ]
            },
            options: {
                legend: { display: true },
                title: {
                    display: true,
                    text: 'Continuous Improvement / Manpower'
                }
            }
        });


        var barChartData2 =
        {
            labels: [@Html.Raw(ViewBag.UserID)], //the names displayed on the x-axis, see images below
            // labels: ['a','b','c','d','e','f',], //the names displayed on the x-axis, see images below
            datasets: [{
                label: 'MTTR Peores 5 maquinas  (Minutos Promedio para Reparar una Falla)',
                data: [@ViewBag.UserID],
                backgroundColor: ["#af0a0a"],
                borderWidth: 2
            }]
        };

        Chart.helpers.merge(Chart.defaults.global.plugins.datalabels, {
            align: 'end',
            anchor: 'end',
            offset: 1,
            color: '#6B8CB0'
        });

        var ctqx2 = document.getElementById('CI_MP_Chart');
        var myChartqe2 = new Chart(ctqx2, {
            type: 'bar',
            data: barChartCI,
            options: {
                responsive: true,
                maintainAspectRatio: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                legend: {
                    labels: {
                        // This more specific font property overrides the global property
                        fontColor: 'black',
                        defaultFontSize: 25,
                    }
                }
            }
        });
        var barChartCI =
        {
            labels: [@Html.Raw(ViewBag.UserID)],
            datasets: [
                {
                    type: 'line',
                    label: 'Porcentaje Meta',
                    data:[@ViewBag.data2sgrap2],
                    backgroundColor: "#8CB06B",
                    borderColor: "#aa0909",
                    borderWidth: 2,
                    fill: false
                },
                {
                    type: 'bar',
                    label: '% de tiempo perdido por Maquina',
                    data: [@ViewBag.datasgrap2],
                    backgroundColor: "#6B8CB0",
                    borderWidth: 2
                }
            ]
        };
        var ctx2 = document.getElementById('chart_CI');
        var myChart2 = new Chart(ctx2, {
            type: 'horizontalBar',
            data: barChartData2,
            options: {
                responsive: true,
                maintainAspectRatio: true,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
        var colorChangeValue = 45; //set this to whatever is the deciding color change value
        var dataset = myChart2.data.datasets[0];
        for (var i = 0; i < dataset.data.length; i++) {
            if (dataset.data[i] > colorChangeValue) {
                dataset.backgroundColor[i] = "#af0a0a";
            }
            else {
                dataset.backgroundColor[i] = "#0aaf0a";
            }
        }
        myChart2.update();

    </script>

}