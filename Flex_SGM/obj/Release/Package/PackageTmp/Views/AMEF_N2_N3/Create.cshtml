    @model Flex_SGM.Models.Metricos

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>AMEF/Reverse</h3>
        <h4>Metricos</h4>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.DiaHora, "Mes", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="input-group datetime col-md-2" id="dtp1" style="padding-left: 10px">
                <input type="text" class="form-control" id="fechaActual"/>
                <span class="input-group-addon glyphicon glyphicon-calendar"></span>
                @Html.HiddenFor(model => model.DiaHora)
                @Html.ValidationMessageFor(model => model.DiaHora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Usuario, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.HiddenFor(model => model.Usuario)
                @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario_area, "Área", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("Usuario_area", (SelectList)ViewBag.Usuario_area, htmlAttributes: new { @class = "form-control", id = "dropDown" })
                @Html.ValidationMessageFor(model => model.Usuario_area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario_responsable, "Responsable", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("Usuario_responsable", null, "--Seleccione--", htmlAttributes: new { @class = "form-control", id = "Normaldrop" })
                @Html.ValidationMessageFor(model => model.Usuario_responsable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextAreaFor(model => model.Descripcion, new { htmlAttributes = new { @class = "@html.hiddenform-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comentarios, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextAreaFor(model => model.Comentarios, new { htmlAttributes = new { @class = "@html.hiddenform-control" } })
                @Html.ValidationMessageFor(model => model.Comentarios, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Proyectos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-1">
                @Html.EditorFor(model => model.Proyectos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Proyectos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar a la Lista", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $("#Normaldrop").chosen();
            $("#Normaldrop1").chosen();
        });

        window.onload = function () {
            var fecha = new Date(); //Fecha actual
            var mes = fecha.getMonth() + 1; //obteniendo mes
            var dia = fecha.getDate(); //obteniendo dia
            var ano = fecha.getFullYear(); //obteniendo año
            if (dia < 10)
                dia = '0' + dia; //agrega cero si el menor de 10
            if (mes < 10)
                mes = '0' + mes //agrega cero si el menor de 10
            document.getElementById('fechaActual').value = mes + "/" + ano;
            document.getElementById('dropDown').value = "AMEF_N2_N3";
        }
    </script>
}
