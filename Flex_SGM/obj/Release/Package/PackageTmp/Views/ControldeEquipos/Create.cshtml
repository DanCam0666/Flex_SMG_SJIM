@model Flex_SGM.Models.ControldeEquipos

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ControldeEquipos</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.MaquinasID, "MaquinasID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaquinasID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaquinasID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DiaHora, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DiaHora, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            @Html.HiddenFor(model => model.DiaHora)
            @Html.ValidationMessageFor(model => model.DiaHora, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.equipo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.equipo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.equipo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.iplocal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.iplocal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.iplocal, "", new { @class = "text-danger" })
            <p>Utiliza Formato:  ###.###.###.###</p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ipintra, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ipintra, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ipintra, "", new { @class = "text-danger" })
            <p>Utiliza Formato:  ###.###.###.###</p>
        </div>
    </div>
    <div class="row clearfix">
        <center> @{Html.RenderPartial("_Result");}</center>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.vlan, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.vlan, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.vlan, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
