@model Flex_SGM.Models.pcr

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal clearfix">
        <h2>Planning Phase PCR</h2>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @Html.HiddenFor(model => model.PCRID)
        @Html.HiddenFor(model => model.Status)
        <div class="x_panel clearfix">
            <div class="x_title  clearfix">
                <h3>Product/Process Change Request <small> PCR</small></h3>

            </div>
            <div class="x_content">

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Originator, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.Originator, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Originator, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", id = "dtc1" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ClientesID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ClientesID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ClientesID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ProyectosID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProyectosID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProyectosID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ReasonID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ReasonID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ReasonID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.PartNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PartNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PartNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.RevLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.RevLevel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RevLevel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-12">
                    @Html.LabelFor(model => model.PartName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PartName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PartName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="x_panel clearfix">
                <div class="x_title  clearfix">
                    <h3>Description of Change <small> PCR</small></h3>
                </div>
                <div class="x_content">

                    <div class="form-group">
                        @Html.LabelFor(model => model.docreason, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.docreason, 12, 20, new { @class = "form-control"  })
                            @Html.ValidationMessageFor(model => model.docreason, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.docscope, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.docscope, 22, 20,  new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.docscope, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MatrizDecisionID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("MatrizDecisionID", null, htmlAttributes: new { @class = "form-control", data_url = Url.Action("Matrizd") })
                            @Html.ValidationMessageFor(model => model.MatrizDecisionID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Risk (1-Low, 2-Med, >3-High)", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.TextBox("0", null, htmlAttributes: new { @class = "form-control", @id = "Risk", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="x_panel clearfix">
                <div class="x_title  clearfix">
                    <h3>Cost Impact <small> PCR</small></h3>
                </div>
                <div class="x_content">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cipieceprice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cipieceprice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cipieceprice, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cicapital, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cicapital, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cicapital, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.citooling, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.citooling, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.citooling, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ciengineering, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ciengineering, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ciengineering, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cipackaging, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cipackaging, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cipackaging, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ciobsolescence, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ciobsolescence, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ciobsolescence, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cimaterial, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cimaterial, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cimaterial, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cifreight, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cifreight, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cifreight, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ciovertime, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ciovertime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ciovertime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ciother, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ciother, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ciother, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.citotal, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.citotal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.citotal, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.crannualvolume, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.crannualvolume, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.crannualvolume, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.crcapacityfng, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.crcapacityfng, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.crcapacityfng, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.crcapacitysupplier, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.crcapacitysupplier, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.crcapacitysupplier, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>

        </div>

        <div class="form-group col-md-7">
            @Html.LabelFor(model => model.Reviewedby, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reviewedby, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Reviewedby, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Reviewedby_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("WatingforReview", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Reviewedby_date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-5">
            <div class="x_panel clearfix">
                <div class="x_title clearfix">
                    <h3>Support <small> PCR   (P = aplica, X = no aplica)</small></h3>
                </div>
                <div class="x_content">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_purchasing, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_purchasing, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_purchasing, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_materials, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_materials, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_materials, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_maintenance, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_maintenance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_maintenance, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_automation, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_automation, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_automation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_quality, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_quality, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_quality, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_safety, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_safety, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_safety, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_environmental, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_environmental, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_environmental, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_tooling, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_tooling, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_tooling, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_stamping, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_stamping, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_stamping, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_welding, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_welding, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_welding, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_chrome, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_chrome, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_chrome, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_ecoat, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_ecoat, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_ecoat, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_topcoat, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_topcoat, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_topcoat, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_backcoat, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_backcoat, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_backcoat, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_assembly, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_assembly, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_assembly, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.support_finance, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_finance, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.support_finance, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>

        <div class="col-md-3">

            <div class="x_panel clearfix">
                <div class="x_title clearfix">
                    <h3>Key Milestones <small> PCR</small></h3>
                </div>
                <div class="x_content">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_buildmrd1, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_buildmrd1, new { htmlAttributes = new { @class = "form-control", @id = "dpk1" } })
                            @Html.ValidationMessageFor(model => model.Keymilestones_buildmrd1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_buildmrd2, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_buildmrd2, new { htmlAttributes = new { @class = "form-control", @id = "dpk2" } })
                            @Html.ValidationMessageFor(model => model.Keymilestones_buildmrd2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_buildmrd3, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_buildmrd3, new { htmlAttributes = new { @class = "form-control", @id = "dpk3" } })
                            @Html.ValidationMessageFor(model => model.Keymilestones_buildmrd3, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_customrrar, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_customrrar, new { htmlAttributes = new { @class = "form-control", @id = "dpk4" } })
                            @Html.ValidationMessageFor(model => model.Keymilestones_customrrar, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_ppap, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_ppap, new { htmlAttributes = new { @class = "form-control", @id = "dpk5" } })
                            @Html.ValidationMessageFor(model => model.Keymilestones_ppap, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_internalsop, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_internalsop, new { htmlAttributes = new { @class = "form-control", @id = "dpk6" } })
                            @Html.ValidationMessageFor(model => model.Keymilestones_internalsop, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_customersop, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_customersop, new { htmlAttributes = new { @class = "form-control", @id = "dpk7" } })
                            @Html.ValidationMessageFor(model => model.Keymilestones_customersop, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_closure, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_closure, new { htmlAttributes = new { @class = "form-control", @id = "dpk8" } })
                            @Html.ValidationMessageFor(model => model.Keymilestones_closure, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>



        </div>

        <div class="col-md-3">

            <div class="x_panel clearfix">
                <div class="x_title clearfix">
                    <h3>Estimated Lead Time <small> PCR</small></h3>
                </div>
                <div class="x_content">

                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_engineering, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_engineering, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.leadtime_engineering, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_tooling, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_tooling, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.leadtime_tooling, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_facilities, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_facilities, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.leadtime_facilities, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_capital, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_capital, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.leadtime_capital, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_material, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_material, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.leadtime_material, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_inventory, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_inventory, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.leadtime_inventory, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_approval, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_approval, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.leadtime_approval, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_totallt, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_totallt, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.leadtime_totallt, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
            </div>
        </div>

        <br />
        <hr />
        <div class="col-md-6">
            <div class="x_panel clearfix">
                <div class="x_title">
                    <h3>Feasbility Considerations <small> Management team to consider the question, not intended to be all inclisive in performing an evaluation.</small></h3>

                </div>
                <div class="x_content">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations1, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations1)
                                @Html.ValidationMessageFor(model => model.FConsiderations1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations2, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations2)
                                @Html.ValidationMessageFor(model => model.FConsiderations2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations3, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations3)
                                @Html.ValidationMessageFor(model => model.FConsiderations3, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations4, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations4)
                                @Html.ValidationMessageFor(model => model.FConsiderations4, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations5, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations5)
                                @Html.ValidationMessageFor(model => model.FConsiderations5, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations6, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations6)
                                @Html.ValidationMessageFor(model => model.FConsiderations6, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations7, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations7)
                                @Html.ValidationMessageFor(model => model.FConsiderations7, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations8, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations8)
                                @Html.ValidationMessageFor(model => model.FConsiderations8, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations9, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations9)
                                @Html.ValidationMessageFor(model => model.FConsiderations9, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations10, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations10)
                                @Html.ValidationMessageFor(model => model.FConsiderations10, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations11, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations11)
                                @Html.ValidationMessageFor(model => model.FConsiderations11, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations12, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations12)
                                @Html.ValidationMessageFor(model => model.FConsiderations12, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations13, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations13)
                                @Html.ValidationMessageFor(model => model.FConsiderations13, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations14, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations14)
                                @Html.ValidationMessageFor(model => model.FConsiderations14, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations15, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FConsiderations15)
                                @Html.ValidationMessageFor(model => model.FConsiderations15, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="x_panel clearfix">
                <div class="x_title">
                    <h3>Risk Analysis Considerations. <small> Management team to consider the question, not intended to be all inclisive in performing an evaluation.</small></h3>

                </div>
                <div class="x_content">

                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk1, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FRisk1)
                                @Html.ValidationMessageFor(model => model.FRisk1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk2, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FRisk2)
                                @Html.ValidationMessageFor(model => model.FRisk2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk3, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FRisk3)
                                @Html.ValidationMessageFor(model => model.FRisk3, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk4, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FRisk4)
                                @Html.ValidationMessageFor(model => model.FRisk4, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk5, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FRisk5)
                                @Html.ValidationMessageFor(model => model.FRisk5, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk6, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FRisk6)
                                @Html.ValidationMessageFor(model => model.FRisk6, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk7, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.FRisk7)
                                @Html.ValidationMessageFor(model => model.FRisk7, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk8, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.FRisk8, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            <label id="FRiskstring8"> </label>
                            @Html.ValidationMessageFor(model => model.FRisk8, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Save" class="btn btn-success col-xs-12" />
            </div>
        </div>
    </div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    <script>

        $(document).ready(function () {


            $('#Risk').val("@ViewBag.Risk");


            $('#MatrizDecisionID').change(function () {

                var url = $(this).data('url');
                var data = { Codigo: $(this).val() };
                $.getJSON(url, data, function (response) {
                    if (response.r1.Arcompras == true)
                        $('#support_purchasing').val("P");
                    else
                        $('#support_purchasing').val("X");

                    if (response.r1.Armateriales == true)
                        $('#support_materials').val("P");
                    else
                        $('#support_materials').val("X");

                    if (response.r1.Armantenimiento == true)
                        $('#support_maintenance').val("P");
                    else
                        $('#support_maintenance').val("X");

                    if (response.r1.Armantenimiento == true)
                        $('#support_automation').val("P");
                    else
                        $('#support_automation').val("X");

                    if (response.r1.Arcalidad == true)
                        $('#support_quality').val("P");
                    else
                        $('#support_quality').val("X");

                    if (response.r1.Arseguridad == true)
                        $('#support_safety').val("P");
                    else
                        $('#support_safety').val("X");

                    if (response.r1.Arambiental == true)
                        $('#support_environmental').val("P");
                    else
                        $('#support_environmental').val("X");

                    if (response.r1.Artooling == true)
                        $('#support_tooling').val("P");
                    else
                        $('#support_tooling').val("X");

                    if (response.r1.Arestampado == true)
                        $('#support_stamping').val("P");
                    else
                        $('#support_stamping').val("X");

                    if (response.r1.Arsoldadura == true)
                        $('#support_welding').val("P");
                    else
                        $('#support_welding').val("X");

                    if (response.r1.Arcromo == true)
                        $('#support_chrome').val("P");
                    else
                        $('#support_chrome').val("X");

                    if (response.r1.Arpintura == true)
                        $('#support_ecoat').val("P");
                    else
                        $('#support_ecoat').val("X");

                    if (response.r1.Arpintura == true)
                        $('#support_topcoat').val("P");
                    else
                        $('#support_topcoat').val("X");

                    if (response.r1.Arcromo == true)
                        $('#support_backcoat').val("P");
                    else
                        $('#support_backcoat').val("X");

                    if (response.r1.Arensamble == true)
                        $('#support_assembly').val("P");
                    else
                        $('#support_assembly').val("X");

                    if (response.r1.Arfinanzas == true)
                        $('#support_finance').val("P");
                    else
                        $('#support_finance').val("X");


                    $('#Risk').val(response.r1.NivelRiesgo);
                });
            });

            $('#cipieceprice').change(function () {
                var total = 0.0;
                total = total+parseFloat($('#cipieceprice').val());
                total = total +parseFloat($('#cicapital').val());
                total = total +parseFloat($('#citooling').val());
                total = total +parseFloat($('#ciengineering').val());
                total = total +parseFloat($('#cipackaging').val());
                total = total +parseFloat($('#ciobsolescence').val());
                total = total +parseFloat($('#cimaterial').val());
                total = total +parseFloat($('#cifreight').val());
                total = total +parseFloat($('#ciovertime').val());
                total = total +parseFloat($('#ciother').val());
                 $('#citotal').val(total);
            });

            $('#cicapital').change(function () {
                var total = 0.0;
                total = total + parseFloat($('#cipieceprice').val());
                total = total + parseFloat($('#cicapital').val());
                total = total + parseFloat($('#citooling').val());
                total = total + parseFloat($('#ciengineering').val());
                total = total + parseFloat($('#cipackaging').val());
                total = total + parseFloat($('#ciobsolescence').val());
                total = total + parseFloat($('#cimaterial').val());
                total = total + parseFloat($('#cifreight').val());
                total = total + parseFloat($('#ciovertime').val());
                total = total + parseFloat($('#ciother').val());
                $('#citotal').val(total);
            });
            $('#citooling').change(function () {
                var total = 0.0;
                total = total + parseFloat($('#cipieceprice').val());
                total = total + parseFloat($('#cicapital').val());
                total = total + parseFloat($('#citooling').val());
                total = total + parseFloat($('#ciengineering').val());
                total = total + parseFloat($('#cipackaging').val());
                total = total + parseFloat($('#ciobsolescence').val());
                total = total + parseFloat($('#cimaterial').val());
                total = total + parseFloat($('#cifreight').val());
                total = total + parseFloat($('#ciovertime').val());
                total = total + parseFloat($('#ciother').val());
                $('#citotal').val(total);
            });
            $('#ciengineering').change(function () {
                var total = 0.0;
                total = total + parseFloat($('#cipieceprice').val());
                total = total + parseFloat($('#cicapital').val());
                total = total + parseFloat($('#citooling').val());
                total = total + parseFloat($('#ciengineering').val());
                total = total + parseFloat($('#cipackaging').val());
                total = total + parseFloat($('#ciobsolescence').val());
                total = total + parseFloat($('#cimaterial').val());
                total = total + parseFloat($('#cifreight').val());
                total = total + parseFloat($('#ciovertime').val());
                total = total + parseFloat($('#ciother').val());
                $('#citotal').val(total);
            });
            $('#cipackaging').change(function () {
                var total = 0.0;
                total = total + parseFloat($('#cipieceprice').val());
                total = total + parseFloat($('#cicapital').val());
                total = total + parseFloat($('#citooling').val());
                total = total + parseFloat($('#ciengineering').val());
                total = total + parseFloat($('#cipackaging').val());
                total = total + parseFloat($('#ciobsolescence').val());
                total = total + parseFloat($('#cimaterial').val());
                total = total + parseFloat($('#cifreight').val());
                total = total + parseFloat($('#ciovertime').val());
                total = total + parseFloat($('#ciother').val());
                $('#citotal').val(total);
            });
            $('#ciobsolescence').change(function () {
                var total = 0.0;
                total = total + parseFloat($('#cipieceprice').val());
                total = total + parseFloat($('#cicapital').val());
                total = total + parseFloat($('#citooling').val());
                total = total + parseFloat($('#ciengineering').val());
                total = total + parseFloat($('#cipackaging').val());
                total = total + parseFloat($('#ciobsolescence').val());
                total = total + parseFloat($('#cimaterial').val());
                total = total + parseFloat($('#cifreight').val());
                total = total + parseFloat($('#ciovertime').val());
                total = total + parseFloat($('#ciother').val());
                $('#citotal').val(total);
            });
            $('#cimaterial').change(function () {
                var total = 0.0;
                total = total + parseFloat($('#cipieceprice').val());
                total = total + parseFloat($('#cicapital').val());
                total = total + parseFloat($('#citooling').val());
                total = total + parseFloat($('#ciengineering').val());
                total = total + parseFloat($('#cipackaging').val());
                total = total + parseFloat($('#ciobsolescence').val());
                total = total + parseFloat($('#cimaterial').val());
                total = total + parseFloat($('#cifreight').val());
                total = total + parseFloat($('#ciovertime').val());
                total = total + parseFloat($('#ciother').val());
                $('#citotal').val(total);
            });
            $('#cifreight').change(function () {
                var total = 0.0;
                total = total + parseFloat($('#cipieceprice').val());
                total = total + parseFloat($('#cicapital').val());
                total = total + parseFloat($('#citooling').val());
                total = total + parseFloat($('#ciengineering').val());
                total = total + parseFloat($('#cipackaging').val());
                total = total + parseFloat($('#ciobsolescence').val());
                total = total + parseFloat($('#cimaterial').val());
                total = total + parseFloat($('#cifreight').val());
                total = total + parseFloat($('#ciovertime').val());
                total = total + parseFloat($('#ciother').val());
                $('#citotal').val(total);
            });
            $('#ciovertime').change(function () {
                var total = 0.0;
                total = total + parseFloat($('#cipieceprice').val());
                total = total + parseFloat($('#cicapital').val());
                total = total + parseFloat($('#citooling').val());
                total = total + parseFloat($('#ciengineering').val());
                total = total + parseFloat($('#cipackaging').val());
                total = total + parseFloat($('#ciobsolescence').val());
                total = total + parseFloat($('#cimaterial').val());
                total = total + parseFloat($('#cifreight').val());
                total = total + parseFloat($('#ciovertime').val());
                total = total + parseFloat($('#ciother').val());
                $('#citotal').val(total);
            });
            $('#ciother').change(function () {
                var total = 0.0;
                total = total + parseFloat($('#cipieceprice').val());
                total = total + parseFloat($('#cicapital').val());
                total = total + parseFloat($('#citooling').val());
                total = total + parseFloat($('#ciengineering').val());
                total = total + parseFloat($('#cipackaging').val());
                total = total + parseFloat($('#ciobsolescence').val());
                total = total + parseFloat($('#cimaterial').val());
                total = total + parseFloat($('#cifreight').val());
                total = total + parseFloat($('#ciovertime').val());
                total = total + parseFloat($('#ciother').val());
                $('#citotal').val(total);
            });


            $('#FRisk1').change(function () {
                var total = parseInt($('#FRisk8').val());

                if ($(this).is(":checked")) {

                    total = total + 1;
                    $('#FRisk8').val(total);
                }
                else if ($(this).is(":not(:checked)")) {

                    total=parseInt(total);
                    total = total - 1;
                    $('#FRisk8').val(total);
                }
            });
            $('#FRisk2').change(function () {
                var total = parseInt($('#FRisk8').val());
                if ($(this).is(":checked")) {

                    total = total + 2;
                    $('#FRisk8').val(total);
                }
                else if ($(this).is(":not(:checked)")) {

                    total = total - 2;
                    $('#FRisk8').val(total);
                }
            });
            $('#FRisk3').change(function () {
                var total = parseInt($('#FRisk8').val());
                if ($(this).is(":checked")) {

                    total = total + 2;
                    $('#FRisk8').val(total);
                }
                else if ($(this).is(":not(:checked)")) {

                    total = total - 2;
                    $('#FRisk8').val(total);
                }
            });
            $('#FRisk4').change(function () {
                var total = parseInt($('#FRisk8').val());
                if ($(this).is(":checked")) {

                    total = total + 1;
                    $('#FRisk8').val(total);
                }
                else if ($(this).is(":not(:checked)")) {

                    total = total - 1;
                    $('#FRisk8').val(total);
                }

            });
            $('#FRisk5').change(function () {
                var total = parseInt($('#FRisk8').val());
                if ($(this).is(":checked")) {

                    total = total + 1;
                    $('#FRisk8').val(total);
                }
                else if ($(this).is(":not(:checked)")) {

                    total = total - 1;
                    $('#FRisk8').val(total);
                }
            });
            $('#FRisk6').change(function () {
                var total = parseInt($('#FRisk8').val());
                if ($(this).is(":checked")) {

                    total = total + 1;
                    $('#FRisk8').val(total);
                }
                else if ($(this).is(":not(:checked)")) {

                    total = total - 1;
                    $('#FRisk8').val(total);
                }

            });
            $('#FRisk7').change(function () {
                var total = parseInt($('#FRisk8').val());
                if ($(this).is(":checked")) {

                    total = total + 3;
                    $('#FRisk8').val(total);
                }
                else if ($(this).is(":not(:checked)")) {

                    total = total - 3;
                    $('#FRisk8').val(total);
                }

            });
        });

        /*

                                    response.r1.ID
                                    response.r1.NivelRiesgo
                                    response.r1.TipoCambio
                                    response.r1.commcliente
                                    response.r1.Arplanta
                                    response.r1.Aringenieria
                                    response.r1.Armanufactura
                                    response.r1.Arcalidad
                                    response.r1.Arfinanzas
                                    response.r1.Arcompras
                                    response.r1.Armateriales
                                    response.r1.Armantenimiento
                                    response.r1.Arseguridad
                                    response.r1.Arambiental
                                    response.r1.Artooling
                                    response.r1.Arestampado
                                    response.r1.Arsoldadura
                                    response.r1.Arcromo
                                    response.r1.Arpintura
                                    response.r1.Arensamble
                                    response.r1.Ppap
                                    response.r1.Drw
                                    response.r1.Spec
                                    response.r1.Pfd
                                    response.r1.Pfmea
                                    response.r1.Sw
                                    response.r1.Pcp
                                    response.r1.Is
                                    response.r1.Msa
                                    response.r1.Ps
                                    response.r1.Sccc
                                    response.r1.Pl
                                    response.r1.Cpo
                                    response.r1.Spo
                                    response.r1.Imds
                                    response.r1.Im
                                    response.r1.Bom
                                    response.r1.Pr
                                    response.r1.Mss
                                    response.r1.Va
                                    response.r1.Sm
                                    response.r1.Ptr
                                    response.r1.Pdr
        */

    </script>
}

