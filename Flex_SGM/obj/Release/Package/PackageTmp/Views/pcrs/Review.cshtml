@model Flex_SGM.Models.pcr
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Revisión</h2>

@Html.AntiForgeryToken()

<style>
    #myModal {
        z-index: 1051 !important;
        opacity: 1 !important;
        visibility: visible !important;
    }

    .modal-backdrop {
        z-index: 1050 !important;
    }

    .modal-dialog {
        margin-top: 100px;
    }
</style>

<div>
    <div class="form-horizontal clearfix">
        <h2>Planning Phase PCR</h2>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Status)
        <div class="x_panel clearfix">
            <div class="x_title  clearfix">
                <h3>Product/Process Change Request <small> PCR -    @Html.DisplayFor(model => model.PCRID)</small></h3>
            </div>
            <div class="x_content">
                <div class="form-group col-md-4">
                    @Html.DisplayNameFor(model => model.Originator)
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Originator, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", id = "dtc1", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ClientesID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Clientes.Cliente, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ProyectosID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Proyectos.Proyecto, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ReasonID, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Reason.Reason, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PartNumber, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PartNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PartName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PartName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.Label("Equipo", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" class="form-control" value="@ViewBag.Equipo" readonly="readonly" />
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.RevLevel, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.RevLevel, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="x_panel clearfix">
                <div class="x_title  clearfix">
                    <h3>Description of Change <small> PCR</small></h3>
                </div>
                <div class="x_content">

                    <!-- CurrentCondition Field -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.CurrentCondition, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.CurrentCondition, 8, 20, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <!-- NewCondition Field -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.NewCondition, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.NewCondition, 8, 20, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.docreason, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.docreason, 8, 20, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.docscope, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.docscope, 8, 20, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MatrizDecisionID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MatrizDecision.TipoCambio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.Label("Risk (1-Low, 2-Med, >3-High)", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.TextBox("0", null, htmlAttributes: new { @class = "form-control", @id = "Risk", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="x_panel clearfix">
                <div class="x_title  clearfix">
                    <h3>Cost Impact <small> PCR</small></h3>
                </div>
                <div class="x_content" style="min-height: 843px">
                    <div class="form-group">
                        @Html.LabelFor(model => model.cipieceprice, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cipieceprice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.cicapital, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cicapital, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.citooling, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.citooling, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ciengineering, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ciengineering, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.cipackaging, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cipackaging, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ciobsolescence, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ciobsolescence, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.cimaterial, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cimaterial, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.cifreight, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cifreight, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ciovertime, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ciovertime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ciother, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ciother, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.citotal, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.citotal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.crannualvolume, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.crannualvolume, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.crcapacityfng, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.crcapacityfng, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.crcapacitysupplier, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.crcapacitysupplier, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BuildOut, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BuildOut, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group" style="margin-left: 1px;">
                        <label>
                            Customer Approval Required?
                            @Html.CheckBoxFor(model => model.CustomerApprovalRequired, new { @disabled = "disabled" })
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group col-md-7">
            @Html.LabelFor(model => model.Reviewedby, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reviewedby, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Reviewedby_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Reviewedby_date == null)
                {
                    @Html.Editor("WatingforReview", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
                else
                {
                    @Html.EditorFor(model => model.Reviewedby_date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
            </div>
        </div>
        <div class="col-md-5">
            <div class="x_panel clearfix">
                <div class="x_title clearfix">
                    <h3>Support <small> PCR   (P = aplica, X = no aplica, R = firmado)</small></h3>
                </div>
                <div class="x_content" style="min-height: 390px">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Compras, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Compras, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Materiales, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Materiales, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Mantenimiento, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Mantenimiento, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Automatizacion, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Automatizacion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Calidad, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Calidad, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Seguridad, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Seguridad, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Ambiental, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Ambiental, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Tooling, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Tooling, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Estampado, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Estampado, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Soldadura, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Soldadura, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Chromo, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Chromo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Ecoat, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Ecoat, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Topcoat, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Topcoat, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Backcoat, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Backcoat, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Ensamble, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Ensamble, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })                                @Html.ValidationMessageFor(model => model.support_Ensamble, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.support_Finanzas, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.support_Finanzas, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="x_panel clearfix">
                <div class="x_title clearfix">
                    <h3>Key Milestones <small> PCR</small></h3>
                </div>
                <div class="x_content">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_buildmrd1, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_buildmrd1, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_buildmrd2, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_buildmrd2, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_buildmrd3, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_buildmrd3, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_customrrar, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_customrrar, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_ppap, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_ppap, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_internalsop, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_internalsop, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_customersop, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_customersop, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Keymilestones_closure, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Keymilestones_closure, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="x_panel clearfix">
                <div class="x_title clearfix">
                    <h3>Estimated Lead Time <small> PCR (Semanas)</small></h3>
                </div>
                <div class="x_content" style="min-height: 436px">
                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_engineering, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_engineering, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_tooling, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_tooling, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_facilities, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_facilities, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_capital, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_capital, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_material, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_material, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_inventory, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_inventory, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_approval, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_approval, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.leadtime_totallt, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.leadtime_totallt, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <hr />
        <div class="col-md-6">
            <div class="x_panel clearfix">
                <div class="x_title">
                    <h3>Feasibility Considerations <small> Management team to consider the question, not intended to be all inclisive in performing an evaluation.</small></h3>
                </div>
                <div class="x_content">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations1, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations1, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations2, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations2, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations3, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations3, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations4, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations4, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations5, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations5, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations6, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations6, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations7, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations7, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations8, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations8, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations9, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations9, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations10, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations10, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations11, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations11, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations12, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations12, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations13, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations13, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations14, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations14, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FConsiderations15, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FConsiderations15, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="x_panel clearfix">
                <div class="x_title">
                    <h3>Risk Analysis Considerations. <small> Management team to consider the question, not intended to be all inclisive in performing an evaluation.</small></h3>
                </div>
                <div class="x_content" style="min-height: 676px">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk1, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FRisk1, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk2, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FRisk2, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk3, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FRisk3, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk4, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FRisk4, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk5, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FRisk5, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk6, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FRisk6, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk7, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-2">
                            <div class="checkbox">
                                @Html.DisplayFor(model => model.FRisk7, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FRisk8, htmlAttributes: new { @class = "control-label col-md-10" })
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.FRisk8, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            <label id="FRiskstring8"> </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="x_panel cbg">
    <div class="x_title">
        <h2>@Html.DisplayFor(model => model.PCRID)</h2>
        <div class="clearfix"></div>
    </div>
    <div class="clearfix"></div>
    <div class="x_content">
        <!-- Updated form with a consistent ID and no action attribute -->
        <form id="revisionForm" method="post">
            <input type="hidden" name="id" value="@Model.ID" />

            <div class="form-group">
                <div>Comentarios</div>
                <textarea class="form-control" id="msg" name="msg" placeholder="Ingrese comentarios..." rows="3"></textarea>
            </div>

            <div class="pull-right">
                <div>Seleccion de Revisión</div>
                @if (ViewBag.Dep == "Ingenieria" && ViewBag.Puesto == "Gerente")
                {
                    <button type="button" class="btn btn-danger" value="Rechazar" onclick="seguro(this.value);">Rechazar...</button>
                    <button type="button" class="btn btn-warning" value="Arreglos" onclick="seguro(this.value);">Se necesitan correcciones...</button>
                }
                <button type="button" class="btn btn-success" value="Aceptar" onclick="seguro(this.value);">Aceptar y continuar proceso...</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal Setup -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitle">PCR - @Html.DisplayFor(model => model.PCRID)</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>¿Está seguro de que quieres <span id="res"></span> el PCR: @Html.DisplayFor(model => model.PCRID)?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">No</button>
                <button type="button" class="btn btn-success" onclick="seguro2()">Sí</button>
            </div>
        </div>
    </div>
</div>

@if (Model.Originator == ViewBag.cUser)
{
    <h4>
        @Html.ActionLink("Editar", "Edit", new { id = Model.ID }) |
    </h4>
}
<h4>

    @Html.ActionLink("Regresar a la Lista", "Index")
</h4>

@section Scripts {
    <script>
        var selectedAction; // Store the selected action (Aceptar, Rechazar, Arreglos)
        let isSubmitting = false; // Flag to prevent duplicate submissions

        // Function to open the modal and display the selected action
        function seguro(action) {
            selectedAction = action; // Store the selected action
            $('#myModal').modal({
                backdrop: 'static', // Prevent closing on outside click
                keyboard: false     // Prevent closing with Esc key
            }).modal('show');
            $('#res').html(selectedAction); // Display selected action in the modal
        }

        // Function to perform the confirmed action
        function seguro2() {
            if (isSubmitting) return; // Exit if already submitting
            isSubmitting = true; // Set flag to indicate submission in progress

            var msgi = $('#msg').val().trim(); // Get and trim the msg value

            console.log("Selected Action:", selectedAction); // Debugging log
            console.log("Message:", msgi); // Debugging log

            // Validation for "Arreglos" action
            if (selectedAction === "Arreglos" && msgi === "") {
                alert("Por favor ingrese comentarios para las correcciones.");
                isSubmitting = false; // Reset flag if validation fails
                return;
            }

            var token = $("[name='__RequestVerificationToken']").val(); // CSRF token
            var url = "@Url.Action("Firma", "PCRs")"; // Direct action URL

            // Prepare the data to send to the server
            var formData = {
                id: @Model.ID,
                Response: selectedAction,
                msg: msgi,
                datos: "Holo", // Placeholder; replace if necessary
                __RequestVerificationToken: token
            };

            // Perform the AJAX POST request
            $.post(url, formData, function (result) {
                console.log("Server response:", result); // Debugging log
                alert(result); // Display the result
                if (result === "Aceptar" || result === "Rechazar" || result === "Arreglos") {
                    window.location.replace('@Url.Action("Index", "PCRs")'); // Redirect on success
                }
            }).fail(function (xhr) {
                console.error("Error:", xhr.responseText); // Debugging log
                alert("Error: " + xhr.responseText); // Handle any errors
            }).always(function () {
                isSubmitting = false; // Reset flag after AJAX completes
            });
        }

        $(document).ready(function () {
            // Ensure modal closes properly on button clicks
            $(document).on('click', '[data-dismiss="modal"]', function () {
                console.log('Modal close button clicked');
                $('#myModal').modal('hide'); // Manually hide modal
            });

            // Clean up after modal hides to remove any backdrop
            $('#myModal').on('hidden.bs.modal', function () {
                console.log('Modal closed');
                $(this).removeClass('show').hide();
                $('.modal-backdrop').remove(); // Ensure backdrop is removed
            });
        });
    </script>
}
